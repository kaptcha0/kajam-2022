[package]
name = "kajam"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
name = "kajam_lib"
crate-type = ["cdylib", "rlib"]
required-features = ["web"]

[dependencies]
bevy-inspector-egui = "0.11.0"
bevy_prototype_lyon = "0.5.0"
heron = { version = "3.1.0", features = ["2d"] }
noise = "0.7.0"
rand = "0.8.5"

[dependencies.bevy]
version = "0.7.0"
default-features = false
features = [
  # These are the default features:
  # (re-enable whichever you like)

  # Bevy functionality:
  "animation",          # Animation support
  # "bevy_gilrs",         # Gamepad input support
  # "bevy_audio",         # Builtin audio
  "bevy_winit",         # Window management
  "x11",                # Linux: Support X11 windowing system
  "filesystem_watcher", # Asset hot-reloading
  "render",             # Graphics Rendering

  ## "render" actually just includes:
  ## (feel free to use just a subset of these, instead of "render")
  "bevy_render",        # Rendering framework core
  "bevy_core_pipeline", # Higher-level rendering abstractions
  "bevy_sprite",        # 2D (sprites) rendering
  # "bevy_pbr",           # 3D (physically-based) rendering
  # "bevy_gltf",          # GLTF 3D assets format support
  "bevy_text",          # Text/font rendering
  "bevy_ui",            # UI toolkit

  # File formats:
  "png",
  # "hdr",
  # "vorbis",

  # These are other features that may be of interest:
  # (add any of these that you need)

  # Bevy functionality:
  "wayland",              # Linux: Support Wayland windowing system
  "subpixel_glyph_atlas", # Subpixel antialiasing for text/fonts
  "serialize",            # Support for `serde` Serialize/Deserialize

  # File formats:
  # "ktx2", # preferred format for GPU textures
  # "dds",
  # "jpeg",
  # "bmp",
  # "tga",
  # "basis-universal",
  # "zstd", # needed if using zstd in KTX2 files
  # "flac",
  # "mp3",
  # "wav",

  # Development/Debug features:
  # "dynamic",      # Dynamic linking for faster compile-times
  # "trace",        # Enable tracing for performance measurement
  # "trace_tracy",  # Tracing using `tracy`
  # "trace_chrome", # Tracing using the Chrome format
  # "wgpu_trace",   # WGPU/rendering tracing
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.dev.package."*"]
opt-level = 3

[profile.release]
opt-level = "s"
strip = "debuginfo"
lto = "thin"

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.7"
wasm-bindgen = "0.2.81"
wee_alloc = "0.4.5"
